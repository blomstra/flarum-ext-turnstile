{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/turnstile/webpack/bootstrap","webpack://@blomstra/turnstile/webpack/runtime/compat get default export","webpack://@blomstra/turnstile/webpack/runtime/define property getters","webpack://@blomstra/turnstile/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/turnstile/webpack/runtime/make namespace object","webpack://@blomstra/turnstile/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/turnstile/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/turnstile/external root \"flarum.core.compat['forum/components/ForgotPasswordModal']\"","webpack://@blomstra/turnstile/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@blomstra/turnstile/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/turnstile/external root \"flarum.core.compat['common/Component']\"","webpack://@blomstra/turnstile/./src/forum/components/Turnstile.tsx","webpack://@blomstra/turnstile/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/turnstile/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/turnstile/external root \"flarum.core.compat['forum/components/ChangePasswordModal']\"","webpack://@blomstra/turnstile/external root \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@blomstra/turnstile/external root \"flarum.core.compat['forum/components/SignUpModal']\"","webpack://@blomstra/turnstile/./src/forum/index.ts","webpack://@blomstra/turnstile/./src/forum/extend/addTurnstileToSignUp.tsx","webpack://@blomstra/turnstile/./src/forum/extend/addTurnstileToLogin.tsx","webpack://@blomstra/turnstile/./src/forum/extend/addTurnstileToForgotPassword.tsx","webpack://@blomstra/turnstile/./src/forum/extend/addTurnstileToChangePassword.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ForgotPasswordModal'];","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","import Component from 'flarum/common/Component';\nimport app from 'flarum/forum/app';\n\nimport type { VnodeDOM, Vnode } from 'mithril';\n\ninterface ITurnstileAttrs {\n  action?: string;\n  onTurnstileStateChange?: (token: string | null) => void;\n}\n\nexport default class Turnstile extends Component<ITurnstileAttrs> {\n  widgetId?: string;\n  turnstileLoaded!: boolean;\n\n  oninit(vnode: Vnode<ITurnstileAttrs, this>) {\n    super.oninit(vnode);\n\n    this.turnstileLoaded = !!window.turnstile;\n  }\n\n  get config() {\n    const { action } = this.attrs;\n\n    return {\n      action,\n      theme: this.getCurrentTheme(),\n      language: app.translator.getLocale() || 'auto',\n      sitekey: app.forum.attribute('blomstra-turnstile.site_key'),\n      size: 'flexible',\n      callback: this.onTurnstileComplete.bind(this),\n      'expired-callback': this.onTurnstileExpire.bind(this),\n      'error-callback': this.onTurnstileError.bind(this),\n    };\n  }\n\n  getCurrentTheme() {\n    const getTheme = flarum.extensions['fof-nightmode']?.getTheme;\n    const Themes = flarum.extensions['fof-nightmode']?.Themes;\n\n    if (getTheme && Themes) {\n      let currentTheme = getTheme();\n\n      if (currentTheme === Themes.AUTO) {\n        currentTheme = window.matchMedia('(prefers-color-scheme:dark)').matches ? Themes.DARK : Themes.LIGHT;\n      }\n\n      if (currentTheme === Themes.DARK) {\n        return 'dark';\n      } else if (currentTheme === Themes.LIGHT) {\n        return 'light';\n      }\n    }\n\n    // fof/nightmode is not installed, so we fall back to detecting if the forum has been set to dark mode or not.\n    return !!!app.forum.attribute('turnstile_dark_mode') ? 'light' : 'dark';\n  }\n\n  onTurnstileComplete(token: string) {\n    this.attrs.onTurnstileStateChange?.(token);\n  }\n\n  onTurnstileExpire() {\n    if (this.widgetId) window.turnstile.reset(this.widgetId);\n\n    this.attrs.onTurnstileStateChange?.(null);\n  }\n\n  onTurnstileError() {\n    this.attrs.onTurnstileStateChange?.(null);\n  }\n\n  createTurnstile() {\n    if (!this.turnstileLoaded) return;\n\n    window.turnstile.render(this.element, this.config);\n  }\n\n  removeTurnstile() {\n    if (!this.turnstileLoaded) return;\n\n    if (this.widgetId) window.turnstile.remove(this.widgetId);\n  }\n\n  oncreate(vnode: VnodeDOM<ITurnstileAttrs, this>): void {\n    super.oncreate(vnode);\n\n    this.createTurnstile();\n  }\n\n  onbeforeremove(vnode: VnodeDOM<ITurnstileAttrs, this>): void {\n    super.onbeforeremove(vnode);\n\n    this.removeTurnstile();\n  }\n\n  view(vnode: VnodeDOM<ITurnstileAttrs, this>) {\n    if (!this.turnstileLoaded) {\n      return <p class=\"BlomstraTurnstile-notLoaded\">{app.translator.trans('blomstra-turnstile.forum.not_loaded_error')}</p>;\n    }\n\n    return <div class=\"Blomstra-Turnstile Form-group\" />;\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ChangePasswordModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/LogInModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SignUpModal'];","import app from 'flarum/forum/app';\nimport addTurnstileToForgotPassword from './extend/addTurnstileToForgotPassword';\nimport addTurnstileToChangePassword from './extend/addTurnstileToChangePassword';\nimport addTurnstileToLogin from './extend/addTurnstileToLogin';\nimport addTurnstileToSignUp from './extend/addTurnstileToSignUp';\n\napp.initializers.add('blomstra/turnstile', () => {\n  addTurnstileToSignUp();\n  addTurnstileToLogin();\n  addTurnstileToForgotPassword();\n  addTurnstileToChangePassword();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SignUpModal from 'flarum/forum/components/SignUpModal';\n\nimport Turnstile from '../components/Turnstile';\n\nexport default function addTurnstileToSignUp() {\n  extend(SignUpModal.prototype, 'submitData', function (data) {\n    if (!!!app.forum.attribute('blomstra-turnstile.signup')) return;\n\n    data.turnstileToken = this.__turnstileToken;\n  });\n\n  extend(SignUpModal.prototype, 'fields', function (fields) {\n    if (!!!app.forum.attribute('blomstra-turnstile.signup')) return;\n\n    fields.add(\n      'turnstile',\n      <Turnstile\n        action=\"sign_up\"\n        onTurnstileStateChange={(token) => {\n          this.__turnstileToken = token;\n        }}\n      />,\n      -5\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport LogInModal from 'flarum/forum/components/LogInModal';\n\nimport Turnstile from '../components/Turnstile';\n\nexport default function addTurnstileToLogin() {\n  extend(LogInModal.prototype, 'loginParams', function (data) {\n    if (!!!app.forum.attribute('blomstra-turnstile.signin')) return;\n\n    data.turnstileToken = this.__turnstileToken;\n  });\n\n  extend(LogInModal.prototype, 'fields', function (fields) {\n    if (!!!app.forum.attribute('blomstra-turnstile.signin')) return;\n\n    fields.add(\n      'turnstile',\n      <Turnstile\n        action=\"log_in\"\n        onTurnstileStateChange={(token) => {\n          this.__turnstileToken = token;\n        }}\n      />,\n      -5\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ForgotPasswordModal from 'flarum/forum/components/ForgotPasswordModal';\n\nimport Turnstile from '../components/Turnstile';\n\nexport default function addTurnstileToForgotPassword() {\n  extend(ForgotPasswordModal.prototype, 'requestParams', function (data) {\n    if (!!!app.forum.attribute('blomstra-turnstile.forgot')) return;\n\n    data.turnstileToken = this.__turnstileToken;\n  });\n\n  extend(ForgotPasswordModal.prototype, 'fields', function (fields) {\n    if (!!!app.forum.attribute('blomstra-turnstile.forgot')) return;\n\n    fields.add(\n      'turnstile',\n      <Turnstile\n        action=\"forgot_pw\"\n        onTurnstileStateChange={(token) => {\n          this.__turnstileToken = token;\n        }}\n      />,\n      -5\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { override, extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport ChangePasswordModal from 'flarum/forum/components/ChangePasswordModal';\n\nimport Turnstile from '../components/Turnstile';\n\nexport default function addTurnstileToForgotPassword() {\n  ChangePasswordModal.prototype.__turnstileToken = null;\n\n  extend(ChangePasswordModal.prototype, 'oninit', function (this: ChangePasswordModal) {\n    this.loading = true;\n  });\n\n  override(ChangePasswordModal.prototype, 'content', function (this: ChangePasswordModal, original) {\n    if (!!!app.forum.attribute('blomstra-turnstile.forgot')) return;\n\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('core.forum.change_password.text')}</p>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n                disabled: this.loading,\n              },\n              app.translator.trans('core.forum.change_password.send_button')\n            )}\n          </div>\n          <Turnstile\n            action=\"forgot_pw\"\n            onTurnstileStateChange={(token) => {\n              this.__turnstileToken = token;\n              this.loading = false;\n              m.redraw();\n            }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  override(ChangePasswordModal.prototype, 'onsubmit', function (this: ChangePasswordModal, original, e: SubmitEvent) {\n    if (!!!app.forum.attribute('blomstra-turnstile.forgot')) return;\n\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/forgot',\n        body: {\n          email: app.session.user!.email(),\n          turnstileToken: this.__turnstileToken,\n        },\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_defineProperties","target","props","i","length","descriptor","configurable","writable","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","Turnstile","subClass","superClass","widgetId","turnstileLoaded","create","constructor","Constructor","protoProps","oninit","vnode","this","window","turnstile","getCurrentTheme","getTheme","extensions","Themes","currentTheme","AUTO","matchMedia","matches","DARK","LIGHT","app","onTurnstileComplete","token","attrs","onTurnstileStateChange","onTurnstileExpire","reset","onTurnstileError","createTurnstile","render","element","config","removeTurnstile","remove","oncreate","onbeforeremove","view","class","action","theme","language","sitekey","size","callback","Component","extend","SignUpModal","data","turnstileToken","__turnstileToken","fields","add","LogInModal","ForgotPasswordModal","ChangePasswordModal","loading","override","original","className","Button","type","disabled","m","redraw","e","preventDefault","method","url","body","email","then","hide","loaded"],"sourceRoot":""}